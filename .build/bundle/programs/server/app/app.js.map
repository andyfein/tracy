{"version":3,"sources":["meteor://ðŸ’»app/imports/api/comps/server/publications.js","meteor://ðŸ’»app/imports/api/comps/comps.js","meteor://ðŸ’»app/imports/api/comps/methods.js","meteor://ðŸ’»app/imports/api/connects/server/publications.js","meteor://ðŸ’»app/imports/api/connects/connects.js","meteor://ðŸ’»app/imports/api/connects/methods.js","meteor://ðŸ’»app/imports/api/lcmodels/server/publications.js","meteor://ðŸ’»app/imports/api/lcmodels/lcmodels.js","meteor://ðŸ’»app/imports/api/lcmodels/methods.js","meteor://ðŸ’»app/imports/api/regions/server/publications.js","meteor://ðŸ’»app/imports/api/regions/methods.js","meteor://ðŸ’»app/imports/api/regions/regions.js","meteor://ðŸ’»app/imports/api/riskmodels/server/publications.js","meteor://ðŸ’»app/imports/api/riskmodels/methods.js","meteor://ðŸ’»app/imports/api/riskmodels/riskmodels.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/server/reset-password-email.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nimport { Comps } from '../comps.js';\nimport { LcModels } from '../../lcmodels/lcmodels.js';\n\n//Meteor.publish('comps.inLcModel', function compsinLcModel(lcmodelId) {\n//  return Comps.find({ lcmodelId });\n//});\nMeteor.publishComposite('comps.inLcModel', function compsInLcModel(lcmodelId) {\n  new SimpleSchema({\n\tlcmodelId: { type: String },\n  }).validate({ lcmodelId });\n\n  const userId = this.userId;\n\n  return {\n\tfind() {\n\t  const query = {\n\t\t_id: lcmodelId,\n\t  };\n\n\t  const options = {\n\t\tfields: { _id: 1 },\n\t  };\n\n\t  return LcModels.find(query, options);\n\t},\n\n\tchildren: [{\n\t  find(lcmodel) {\n\t\treturn Comps.find({ lcmodelId: lcmodel._id }, { fields: Comps.publicFields });\n\t  },\n\t}],\n  };\n});\n","import { Mongo } from 'meteor/mongo';\n//import { Factory }\n//import faker\n//\n\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { LcModels } from '../lcmodels/lcmodels.js';\n\nclass CompsCollection extends Mongo.Collection {\n  insert(comp) {\n\treturn super.insert(comp);\n  }\n  update(selector, modifier) {\n\treturn super.update(selector, modifier);\n  }\n  remove(selector) {\n\treturn super.remove(selector);\n  }\n}\n\nexport const Comps = new CompsCollection('Comps');\n\nComps.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; }\n});\n\nComps.schema = new SimpleSchema({\n  _id: {\n\ttype: String,\n\tregEx: SimpleSchema.RegEx.Id,\n  },\n  lcmodelId: {\n\ttype: String,\n\tregEx: SimpleSchema.RegEx.Id,\n\tdenyUpdate: true,\n  },\n  name: {\n\ttype: String,\n\tmax: 100,\n\toptional: true,\n  },\n  firmName: {\n\ttype: String,\n\tmax: 100,\n\toptional: true,\n  },\n  siteLocation: {\n\ttype: String,\n\tmax: 100,\n\t//TODO no regex to allow empty strings - better idea?\n\t//regEx: SimpleSchema.RegEx.Id,\n\toptional: true,\n  },\n  x: {\n\ttype: Number,\n  },\n  y: {\n\ttype: Number,\n  },\n});\n\nComps.attachSchema(Comps.schema);\n\nComps.publicFields = {\n  lcmodelId: 1,\n  name: 1,\n  firmName: 1,\n  siteLocation: 1,\n  x: 1,\n  y: 1,\n};\n\nComps.helpers({\n  // for some reasons needed in comps-item.js SimpleSchema -> Comps._helpers\n});\n","import { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Comps } from './comps.js';\nimport { Connects } from '../connects/connects.js';\n\nexport const insert = new ValidatedMethod({\n  name: 'comps.insert',\n  validate: Comps.simpleSchema().pick(['lcmodelId', 'name', 'firmName', 'siteLocation', 'x', 'y']).validator({ clean: true, filter: false }),\n  //applyOptions: {\n  //  onResultReceived: (error, result) => {\n  //    console.log('method call');\n  //    console.log(result);\n  //  }\n  //},\n  run({ lcmodelId, name, firmName, siteLocation, x, y }) {\n\t//TODO sanity checks\n\t\n\tconst comp = {\n\t  lcmodelId,\n\t  name,\n\t  firmName,\n\t  siteLocation,\n\t  x,\n\t  y,\n\t}\n\n\treturn Comps.insert(comp);\n  }\n});\n\nexport const updateInfo = new ValidatedMethod({\n  name: 'comps.updateInfo',\n  validate: new SimpleSchema({\n\tcompId: Comps.simpleSchema().schema('_id'),\n\tname: Comps.simpleSchema().schema('name'),\n\tfirmName: Comps.simpleSchema().schema('firmName'),\n\tsiteLocation: Comps.simpleSchema().schema('siteLocation'),\n\t//TODO clean set to false to allow for empty strings - any better idea?\n  }).validator({ clean: false, filter: false }),\n  run( { compId, name, firmName, siteLocation } ) {\n\t//TODO validate\n\tconsole.log(\"Server: \" + siteLocation);\n\tComps.update(compId, {\n\t  $set: { name, firmName, siteLocation },\n\t});\n  },\n});\n\nexport const updatePosition = new ValidatedMethod({\n  name: 'comps.updatePosition',\n  validate: new SimpleSchema({\n\tcompId: Comps.simpleSchema().schema('_id'),\n\tnewX: Comps.simpleSchema().schema('x'),\n\tnewY: Comps.simpleSchema().schema('y'),\n  }).validator({ clean: true, filter: false }),\n  run( { compId, newX, newY } ) {\n\t//TODO validate\n\tComps.update(compId, {\n\t  $set: { x: newX, y: newY },\n\t});\n  },\n});\n\nexport const remove = new ValidatedMethod({\n  name: 'comps.remove',\n  validate: new SimpleSchema({ compId: Comps.simpleSchema().schema('_id'), }).validator({ clean: true, filter: false }),\n  run({ compId }) {\n\t//TODO sanity checks\n\tConnects.remove({ $or: [{ parentCompId: compId }, { childCompId: compId }] });\n\tComps.remove(compId);\n  },\n});\n\nconst COMPS_METHODS = _.pluck([\n  insert,\n  updateInfo,\n  updatePosition,\n  remove,\n], 'name');\n\nif (Meteor.isServer) {\n  DDPRateLimiter.addRule({\n\tname(name) {\n\t  return _.contains(COMPS_METHODS, name);\n\t},\n\tconnectionId() { return true; },\n  }, 5, 1000);\n}\n\n\n","import { Meteor } from 'meteor/meteor';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nimport { Connects } from '../connects.js';\nimport { LcModels } from '../../lcmodels/lcmodels.js';\n\nMeteor.publishComposite('connects.inLcModel', function connectsInLcModel(lcmodelId) {\n  //TODO publish/update/delete dependent on Comps?\n  new SimpleSchema({\n\tlcmodelId: { type: String },\n  }).validate({ lcmodelId });\n\n  return {\n\tfind() {\n\t  const query = {\n\t\t_id: lcmodelId,\n\t  };\n\n\t  const options =  {\n\t\tfields: { _id: 1 },\n\t  };\n\n\t  return LcModels.find(query, options);\n\t},\n\n\tchildren: [{\n\t  find(lcmodel) {\n\t\treturn Connects.find({ lcmodelId: lcmodel._id }, { fields: Connects.publicFields });\n\t  },\n\t}],\n  };\n});\n","import { Mongo } from 'meteor/mongo';\n\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nimport { Comps } from '../comps/comps.js';\n\nclass ConnectsCollection extends Mongo.Collection {\n  insert(connect) {\n\tsuper.insert(connect);\n  }\n  remove(selector) {\n\tsuper.remove(selector);\n  }\n}\n\nexport const Connects = new ConnectsCollection('Connects');\n\nConnects.deny({\n  insert() { return true; },\n  remove() { return true; },\n});\n\nConnects.schema = new SimpleSchema({\n  _id: {\n\ttype: String,\n\tregEx: SimpleSchema.RegEx.Id,\n  },\n  lcmodelId: {\n\ttype: String,\n\tregEx: SimpleSchema.RegEx.Id,\n  },\n  parentCompId: {\n\ttype: String,\n\tregEx: SimpleSchema.RegEx.Id,\n  },\n  childCompId: {\n\ttype: String,\n\tregEx: SimpleSchema.RegEx.Id,\n  },\n});\n\nConnects.attachSchema(Connects.schema);\n\nConnects.publicFields = {\n  lcmodelId: 1,\n  parentCompId: 1,\n  childCompId: 1,\n};\n\nConnects.helpers({\n  parent() {\n\treturn Comps.findOne({ _id: this.parentCompId });\n  },\n  child() {\n\treturn Comps.findOne({ _id: this.childCompId });\n  },\n});\n","import { Meteor } from 'meteor/meteor';\n\nimport { _ } from 'meteor/underscore';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Connects } from './connects.js';\n\nexport const connect = new ValidatedMethod({\n  name: 'connects.connect',\n  validate: Connects.simpleSchema().pick(['lcmodelId', 'parentCompId', 'childCompId']).validator({ clean: true, filter: false }),\n  run({ lcmodelId, parentCompId, childCompId }) {\n\tconst connect = {\n\t  lcmodelId,\n\t  parentCompId,\n\t  childCompId,\n\t};\n\n\tConnects.insert(connect);\n  }\n});\n\nexport const disconnect = new ValidatedMethod({\n  name: 'connects.disconnect',\n  validate: new SimpleSchema({ connectId: Connects.simpleSchema().schema('_id'), }).validator({ clean: true, filter: false }),\n  run({ connectId }) {\n\tConnects.remove(connectId);\n  },\n});\n\nconst CONNECTS_METHODS = _.pluck([\n  connect,\n  disconnect,\n], 'name');\n\nif (Meteor.isServer) {\n  DDPRateLimiter.addRule({\n\tname(name) {\n\t  return _.contains(CONNECTS_METHODS, name);\n\t},\n\tconnectionId() { return true; },\n  }, 5, 1000);\n}\n","import { Meteor } from 'meteor/meteor';\n\nimport { LcModels } from '../lcmodels.js';\n\nMeteor.publish('lcmodels', function lcmodelsPublic() {\n  return LcModels.find({}, \n\t\t\t\t\t   {\n\t\t\t\t\t\t fields: LcModels.publicFields,\n\t\t\t\t\t   });\n});\n\n//Meteor.publish('lcmodels.public', function lcmodelsPublic() {\n//  return LcModels.find({\n//    userId: { $exists: false },\n//  }, {\n//    fields: LcModels.publicFields,\n//  });\n//});\n//\n//Meteor.publish('lcmodels.private', function lcmodelsPrivate() {\n//  if (!this.userId) {\n//    return this.ready();\n//  }\n//\n//  return LcModels.find({\n//    userId: this.userId,\n//  }, {\n//    fields: LcModels.publicFields,\n//  });\n//});\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n//import { Factory } from 'meteor/factory';\n//\nimport { Comps } from '../comps/comps.js';\nimport { Connects } from '../connects/connects.js';\n\nclass LcModelsCollection extends Mongo.Collection {\n  insert(lcmodel, callback) {\n\t//TODO validation\n\treturn super.insert(lcmodel, callback);\n  }\n  remove(selector, callback) {\n\t// TODO  remove components etc\n\treturn super.remove(selector, callback);\n  }\n}\n\nexport const LcModels = new LcModelsCollection('LcModels');\n\n// Deny all client-side updates since we will be using methods to manage this collection\nLcModels.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nLcModels.schema = new SimpleSchema({\n  _id: { type: String, regEx: SimpleSchema.RegEx.Id },\n  name: { type: String },\n  riskModelId: { type: String, regEx: SimpleSchema.RegEx.Id },\n  userId: { type: String, regEx: SimpleSchema.RegEx.Id},\n});\n\nLcModels.attachSchema(LcModels.schema);\n\n// This represents the keys from objects that should be published\n// to the client. If we add secret properties to objects, don't list\n// them here to keep them private to the server.\nLcModels.publicFields = {\n  name: 1,\n  riskModelId: 1,\n  userId: 1,\n};\n\n//Factory.define('list', Lists, {});\n\nLcModels.helpers({\n  // A list is considered to be private if it has a userId set\n//  isPrivate() {\n//\treturn !!this.userId;\n//  },\n//  isLastPublicList() {\n//\tconst publicListCount = Lists.find({ userId: { $exists: false } }).count();\n//\treturn !this.isPrivate() && publicListCount === 1;\n//  },\n//  editableBy(userId) {\n//\tif (!this.userId) {\n//\t  return true;\n//\t}\n//\n//\treturn this.userId === userId;\n//  },\n  \n  comps() {\n\treturn Comps.find({ lcmodelId: this._id });\n  },\n  connects() {\n\treturn Connects.find({ lcmodelId: this._id });\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { _ } from 'meteor/underscore';\n\nimport { LcModels } from './lcmodels.js';\nimport { Comps } from '../comps/comps.js';\n\nconst LCMODEL_ID_ONLY = new SimpleSchema({\n  lcmodelId: LcModels.simpleSchema().schema('_id'),\n}).validator({ clean: true, filter: false });\n\nexport const insert = new ValidatedMethod({\n  name: 'lcmodels.insert',\n  validate: LcModels.simpleSchema().pick(['name', 'riskModelId', 'userId']).validator({ clean: true, filter: false }),\n  run({ name, riskModelId, userId }) {\n    const lcmodelId = LcModels.insert({ name, riskModelId, userId });\n\n\tconst initialComp = {\n\t  lcmodelId,\n\t  name: name,\n\t  firmName: 'unknown',\n\t  siteLocation: 'unknown',\n\t  x: 0,\n\t  y: 0,\n\t}\n\tComps.insert(initialComp);\n\n\treturn lcmodelId;\n  },\n});\n\n//export const makePrivate = new ValidatedMethod({\n//  name: 'lists.makePrivate',\n//  validate: LIST_ID_ONLY,\n//  run({ listId }) {\n//    if (!this.userId) {\n//      throw new Meteor.Error('lists.makePrivate.notLoggedIn',\n//        'Must be logged in to make private lists.');\n//    }\n//\n//    const list = Lists.findOne(listId);\n//\n//    if (list.isLastPublicList()) {\n//      throw new Meteor.Error('lists.makePrivate.lastPublicList',\n//        'Cannot make the last public list private.');\n//    }\n//\n//    Lists.update(listId, {\n//      $set: { userId: this.userId },\n//    });\n//  },\n//});\n//\n//export const makePublic = new ValidatedMethod({\n//  name: 'lists.makePublic',\n//  validate: LIST_ID_ONLY,\n//  run({ listId }) {\n//    if (!this.userId) {\n//      throw new Meteor.Error('lists.makePublic.notLoggedIn',\n//        'Must be logged in.');\n//    }\n//\n//    const list = Lists.findOne(listId);\n//\n//    if (!list.editableBy(this.userId)) {\n//      throw new Meteor.Error('lists.makePublic.accessDenied',\n//        'You don\\'t have permission to edit this list.');\n//    }\n\n    // XXX the security check above is not atomic, so in theory a race condition could\n//    // result in exposing private data\n//    Lists.update(listId, {\n//      $unset: { userId: true },\n//    });\n//  },\n//});\n\n//export const updateName = new ValidatedMethod({\n//  name: 'lists.updateName',\n//  validate: new SimpleSchema({\n//    listId: Lists.simpleSchema().schema('_id'),\n//    newName: Lists.simpleSchema().schema('name'),\n//  }).validator({ clean: true, filter: false }),\n//  run({ listId, newName }) {\n//    const list = Lists.findOne(listId);\n//\n//    if (!list.editableBy(this.userId)) {\n//      throw new Meteor.Error('lists.updateName.accessDenied',\n//        'You don\\'t have permission to edit this list.');\n//    }\n//\n//    // XXX the security check above is not atomic, so in theory a race condition could\n//    // result in exposing private data\n//\n//    Lists.update(listId, {\n//      $set: { name: newName },\n//    });\n//  },\n//});\n\nexport const remove = new ValidatedMethod({\n  name: 'lcmodels.remove',\n  validate: LCMODEL_ID_ONLY,\n  run({ lcmodelId }) {\n//    const list = Lists.findOne(listId);\n//\n//    if (!list.editableBy(this.userId)) {\n//      throw new Meteor.Error('lists.remove.accessDenied',\n//        'You don\\'t have permission to remove this list.');\n//    }\n//\n//    // XXX the security check above is not atomic, so in theory a race condition could\n//    // result in exposing private data\n//\n//    if (list.isLastPublicList()) {\n//      throw new Meteor.Error('lists.remove.lastPublicList',\n//        'Cannot delete the last public list.');\n//    }\n\n    LcModels.remove(lcmodelId);\n  },\n});\n\n// Get list of all method names on Lists\nconst LISTS_METHODS = _.pluck([\n  insert,\n  remove,\n], 'name');\n\nif (Meteor.isServer) {\n  // Only allow 5 list operations per connection per second\n  DDPRateLimiter.addRule({\n    name(name) {\n      return _.contains(LISTS_METHODS, name);\n    },\n\n    // Rate limit per connection ID\n    connectionId() { return true; },\n  }, 5, 1000);\n}\n","import { Meteor } from 'meteor/meteor';\n\nimport { Regions } from '../regions.js';\n\nMeteor.publish('regions', function regions() {\n  return Regions.find({});\n});\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { _ } from 'meteor/underscore';\n\nimport { Regions } from './regions.js';\n\nconst REGION_ID_ONLY = new SimpleSchema({\n  regionId: Regions.simpleSchema().schema('_id'),\n}).validator({ clean: true, filter: false });\n\nexport const insert = new ValidatedMethod({\n  name: 'regions.insert',\n  validate: Regions.simpleSchema().pick(['name']).validator({ clean: true, filter: false }),\n  run({ name }) {\n\treturn Regions.insert({ name, regions: [] });\n  },\n});\n\n\nexport const remove = new ValidatedMethod({\n  name: 'regions.remove',\n  validate: REGION_ID_ONLY,\n  run({ regionId }) {\n\n\t//TODO checkeditable etc\n\t\n\tRegions.remove(regionId);\n  },\n});\n\nconst REGIONS_METHODS = _.pluck([\n  insert,\n  remove,\n], 'name');\n\nif (Meteor.isServer) {\n  // Only allow 5 riskmodels operations per connection per second\n  DDPRateLimiter.addRule({\n\tname(name) {\n\t  return _.contains(REGIONS_METHODS, name);\n\t},\n\n\t//Rate limit per connection ID\n\tconnectionId() { return true; },\n\n  }, 5, 1000)\n}\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nclass RegionsCollection extends Mongo.Collection {\n  insert(region, callback) {\n\treturn super.insert(region, callback);\n  }\n  remove(selector, callback) {\n\treturn super.remove(selector, callback);\n  }\n}\n\nexport const Regions = new RegionsCollection('Regions');\n\nRegions.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nRegions.schema = new SimpleSchema({\n  _id: { type: String, regEx: SimpleSchema.RegEx.Id },\n  name: { type: String },\n // lat: { type: Number },\n // lng: { type: Number },\n});\n\nRegions.attachSchema(Regions.schema);\n\nRegions.publicFields = {\n  name: 1,\n  //lat: 1,\n  //lng: 1,\n};\n\nRegions.helpers({\n\n});\n","import { Meteor } from 'meteor/meteor';\n\nimport { RiskModels } from '../riskmodels.js';\n\n//Todo public, private\nMeteor.publish('riskmodels.public', function riskModelsPublic() {\n  return RiskModels.find({ \n\tuserId: { $exists: false },\n  }, {\n\tfields: RiskModels.publicFields,\n  });\n});\n\nMeteor.publish('riskmodels.private', function lcmodelsPrivate() {\n  if (!this.userId) {\n    return this.ready();\n  }\n\n  return RiskModels.find({\n    userId: this.userId,\n  }, {\n    fields: RiskModels.publicFields,\n  });\n});\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { _ } from 'meteor/underscore';\n\nimport { RiskModels } from './riskmodels.js';\nimport { Regions } from '../regions/regions.js';\n\nconst RISKMODEL_ID_ONLY = new SimpleSchema({\n  riskmodelId: RiskModels.simpleSchema().schema('_id'),\n}).validator({ clean: true, filter: false });\n\nexport const insert = new ValidatedMethod({\n  name: 'riskmodels.insert',\n  validate: RiskModels.simpleSchema().pick(['name', 'userId']).validator({ clean: true, filter: false }),\n  run({ name, userId }) {\n\treturn RiskModels.insert({ name, userId, regions: [] });\n  },\n});\n\nexport const addEntry = new ValidatedMethod({\n  name: 'riskmodels.addEntry',\n  validate: new SimpleSchema({\n\triskmodelId: RiskModels.simpleSchema().schema('_id'),\n\tnewEntry: { type: RiskModels.entrySchema }, \n  }).validator({ clean: true, filter: false }),\n  run({ riskmodelId, newEntry }) {\n\tRiskModels.update(riskmodelId, {\n\t  $push: { regions: newEntry }\n\t});\n  },\n});\n\nexport const deleteEntry = new ValidatedMethod({\n  name: 'riskmodels.deleteEntry',\n  validate: new SimpleSchema({\n\triskmodelId: RiskModels.simpleSchema().schema('_id'),\n\tregionId: Regions.simpleSchema().schema('_id'),\n  }).validator({ clean: true, filter: false }),\n  run({ riskmodelId, regionId }) {\n\tRiskModels.update(riskmodelId, {\n\t  $pull: { regions: { regionId: regionId } }\n\t});\n  },\n});\n\nexport const remove = new ValidatedMethod({\n  name: 'riskmodels.remove',\n  validate: RISKMODEL_ID_ONLY,\n  run({ riskmodelId }) {\n\t//TODO checkeditable etc\n\tRiskModels.remove(riskmodelId);\n  },\n});\n\nconst RISKMODELS_METHODS = _.pluck([\n  insert,\n  addEntry,\n  deleteEntry,\n  remove,\n], 'name');\n\nif (Meteor.isServer) {\n  // Only allow 5 riskmodels operations per connection per second\n  DDPRateLimiter.addRule({\n\tname(name) {\n\t  return _.contains(RISKMODELS_METHODS, name);\n\t},\n\n\t//Rate limit per connection ID\n\tconnectionId() { return true; },\n\n  }, 5, 1000)\n}\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n//import { Factory } from 'meteor/factory';\n\n//TODO import Countries etc\n\nclass RiskModelsCollection extends Mongo.Collection {\n  insert(riskModel, callback) {\n\t// TODO possible to insert custom logic\n\treturn super.insert(riskModel, callback);\n  }\n\n  update(selector, callback) {\n\treturn super.update(selector, callback);\n  }\n\n  remove(selector, callback) {\n\t// TODO possible to insert custom logic\n\treturn super.remove(selector, callback);\n  }\n}\n\nexport const RiskModels = new RiskModelsCollection('RiskModels');\n\n// Deny all client-side udpates\nRiskModels.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nRiskModels.entrySchema = new SimpleSchema({\n  regionId: { type: String, regEx: SimpleSchema.RegEx.Id },\n  cl: { type: Number, min: -1, max: 2 },\n  eo: { type: Number, min: -1, max: 2 },\n  fa: { type: Number, min: -1, max: 2 },\n  fl: { type: Number, min: -1, max: 2 },\n  fs: { type: Number, min: -1, max: 2 },\n  sb: { type: Number, min: -1, max: 2 },\n  hs: { type: Number, min: -1, max: 2 },\n  wh: { type: Number, min: -1, max: 2 },\n});\n\nRiskModels.schema = new SimpleSchema({\n  _id: { type: String, regEx: SimpleSchema.RegEx.Id },\n  name: { type: String },\n  userId: { type: String, regEx: SimpleSchema.RegEx.Id, optional: true },\n  regions: {type: [RiskModels.entrySchema]},\n});\n\nRiskModels.attachSchema(RiskModels.schema);\n\nRiskModels.publicFields = {\n  _id: 1,\n  name: 1,\n  userId: 1,\n  regions: 1,\n};\n\n//Factory.define('riskModels', RiskModels, {});\n\nRiskModels.helpers({\n  // TODO define helpers (e.g. get all countries());\n\n});\n","// starting set of data (if app is loaded with empty db) - TODO\n//import './fixtures.js';\n\n// configuring Accounts package to define the UI of the reset password email. TODO\nimport './reset-password-email.js';\n\n// Security settings TODO\n//import './security.js';\n\n// defining all coellections, publications and methods\nimport './register-api.js';\n","import '../../api/lcmodels/methods.js';\nimport '../../api/lcmodels/server/publications.js';\nimport '../../api/riskmodels/methods.js';\nimport '../../api/riskmodels/server/publications.js';\nimport '../../api/comps/methods.js';\nimport '../../api/comps/server/publications.js';\nimport '../../api/connects/methods.js';\nimport '../../api/connects/server/publications.js';\nimport '../../api/regions/methods.js';\nimport '../../api/regions/server/publications.js';\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.emailTemplates.siteName = 'Phoenix Tracy';\nAccounts.emailTemplates.from = 'Phoenix Tracy Accounts <accounts@gotracy.org>';\n\nAccounts.emailTemplates.resetPassword = {\n  subject() {\n\treturn 'Reset your password on Phoenix Tracy';\n  },\n  text(user, url) {\n\treturn `Hello!\n\t\n\tClick the link below to reset your password on Phoenix Tracy.\n  \n  ${url}\n\nIf you didn't request this email, please ignore it.\n\nThanks,\nThe Phoenix Tracy team\n`;\n  },\n};\n","import '/imports/startup/server';\n"]}